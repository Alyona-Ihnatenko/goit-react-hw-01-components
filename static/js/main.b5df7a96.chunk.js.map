{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/StatisticalList.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/AnyTransaction.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","StatisticalList","label","percentage","Statistics","title","css","statistics","statList","map","stat","id","FriendListItem","isOnline","item","online","offline","width","FriendList","friends","friendList","friend","AnyTransaction","type","amount","currency","transactionHistory","TransactionHistory","items","transactionHead","App","user","StatisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5df7a96.chunk.js","sourcesContent":["// import user from './user.json';\n// \"name\": \"Jacques Gluke\",\n// \"tag\": \"jgluke\",\n// \"location\": \"Ocho Rios, Jamaica\",\n// \"avatar\": \"https://www.flaticon.com/svg/static/icons/svg/3784/3784184.svg\",\n// \"stats\": {\n//   \"followers\": 5603,\n//   \"views\": 4827,\n//   \"likes\": 1308\n// }\nimport PropTypes from 'prop-types';\n\nexport default function Profile({ name, tag, location, avatar, stats }) {\n  return (\n    <div className=\"profile\">\n      <div className=\"description\">\n        <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\n        <p className=\"name\">{name}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className=\"stats\">\n        <li>\n          <span className=\"label\">Followers</span>\n          <span className=\"quantity\">{stats.followers}</span>\n        </li>\n        <li>\n          <span className=\"label\">Views</span>\n          <span className=\"quantity\">{stats.views}</span>\n        </li>\n        <li>\n          <span className=\"label\">Likes</span>\n          <span className=\"quantity\">{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number,\n  }),\n};\n","// import statData from './statistical-data.json';\nimport PropTypes from 'prop-types';\n// import css from '../statistic/item.module.css';\n\nfunction StatisticalList({ label, percentage }) {\n  return (\n    <li className=\"css.item\">\n      <span className=\"css.label\">{label}</span>\n      <span className=\"css.percentage\">{percentage}%</span>\n    </li>\n  );\n}\nStatisticalList.propTypes = {\n  label: PropTypes.string,\n  percentage: PropTypes.number,\n};\nexport default StatisticalList;\n","import PropTypes from 'prop-types';\nimport css from '../Statistics/Statistics.module.css';\nimport StatisticalList from './StatisticalList';\n// import StatisticalData from './statistical-data.json';\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className={css.statistics}>\n      {title && <h2 className={css.title}>{title}</h2>}\n\n      <ul className={css.statList}>\n        {stats.map(stat => (\n          <StatisticalList\n            key={stat.id}\n            label={stat.label}\n            percentage={stat.percentage}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.number,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\nimport css from '../FriendList/FriendList.module.css';\n\nexport default function FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <li className={css.item}>\n      <span className={isOnline === true ? css.online : css.offline}></span>\n      <img className={avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={name}>{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n};\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport css from '../FriendList/FriendList.module.css';\n\nexport default function FriendList({ friends }) {\n  return (\n    <ul className={css.friendList}>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport css from '../TransactionHistory/TransactionHistory.module.css';\nexport default function AnyTransaction({ type, amount, currency }) {\n  return (\n    <tr className={css.transactionHistory}>\n      <th>{type}</th>\n      <th>{amount}</th>\n      <th>{currency}</th>\n    </tr>\n  );\n}\n\nAnyTransaction.propTypes = {\n  type: PropTypes.string,\n  amount: PropTypes.number,\n  currency: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport css from '../TransactionHistory/TransactionHistory.module.css';\nimport AnyTransaction from './AnyTransaction';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className={css.transactionHistory}>\n      <thead className={css.transactionHead}>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody className={css.AnyTransaction}>\n        {items.map(item => (\n          <AnyTransaction\n            key={item.id}\n            type={item.type}\n            amount={item.amount}\n            currency={item.currency}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.array,\n};\n","import React from 'react';\nimport './App.css';\nimport Profile from './components/Profile/Profile';\nimport user from './components/Profile/user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport StatisticalData from './components/Statistics/statistical-data.json';\nimport friends from './components/FriendList/friends.json';\nimport FriendList from './components/FriendList/FriendList';\nimport transactions from './components/TransactionHistory/transactions.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={StatisticalData} />;\n      <Statistics stats={StatisticalData} />;\n      <FriendList friends={friends} />;\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}